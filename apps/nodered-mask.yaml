apiVersion: v1
kind: Service
metadata:
  name: nodered
spec:
  ports:
  - name: nodered
    port: 1880
    protocol: TCP
    targetPort: 1880
  selector:
    app: nodered
  sessionAffinity: None
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: nodered
spec:
  serviceName: nodered
  selector:
    matchLabels:
      app: nodered
  replicas: 1
  template:
    metadata:
      name: nodered
      labels:
        app: nodered
    spec:
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 10
      containers:
      - name: nodered
        image: nodered/node-red
        ports:
        - containerPort: 1880
        volumeMounts:
        - name: nodered-data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: nodered-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodered-front
spec:
  selector:
    matchLabels:
      app: nodered-front
  template:
    metadata:
      labels:
        app: nodered-front
    spec:
      containers:
      - name: nodered-front
        image: alpine/socat
        args: ["TCP-LISTEN:11880,fork,reuseaddr","TCP:nodered:1880"]
        ports:
        - containerPort: 11880
          hostPort: 11880
